
# Screen for login of the athlete (main.py: LoginScreenAthlete)
<LoginScreenAthlete>:
    FloatLayout:
        # background image
        canvas:
            Rectangle:
                size: self.size
                pos: self.pos
                source: "graphics/background/background_athlete.png"

        Image:  # TrainTrack logo
            source: "graphics/logo/LogoText_reduced.png"
            pos_hint: {"top": 1, "right": .9}
            size_hint: .75, .37

        Label:  # screen name
            text: "LOGIN SCREEN ATHLETE"
            pos_hint: {"top": .66, "right": 1}
            size_hint: 1, .05
            font_size: '20sp'
            canvas.before:
                Color:
                    rgba: [0,100,100,.25]
                Rectangle:
                    pos: self.pos
                    size: self.size

        #Input field Email
        TextInput:
            id: login_email
            hint_text: "Enter Athlete Email"
            pos_hint: {"top": .58, "right": .89}
            size_hint: .78, .08
            use_bubble: True
            use_handles: True
            font_size: '15sp'
            multiline: False
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: 1, 1, 1, 1
                Line:
                    points: self.x + dp(value=5), self.y + dp(value=10), self.x + self.width - dp(value=5), self.y + dp(value=10)
                    width: 1

        TextInput:  # insert password
            id: login_password
            password: True
            hint_text: "Password"
            pos_hint: {"top": .47, "right": .89}
            size_hint: .78, .08
            use_bubble: True
            use_handles: True
            font_size: '15sp'
            multiline: False
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: 1, 1, 1, 1
                Line:
                    points: self.x + dp(value=5), self.y + dp(value=10), self.x + self.width - dp(value=5), self.y + dp(value=10)
                    width: 1

        GridLayout:
            cols: 1
            pos_hint: {"top": .275, "right": .89}
            size_hint: .78, .18

            ImageButton:  # Button "GET STARTED"
                id: get_started_athlete
                source: "graphics/buttons/get_started_athlete.png" if self.state == 'normal' else "graphics/buttons/get_started_athlete_grau.png"
                on_release:
                    root.get_started()  # call method in class LoginScreenAthlete in main.py

            LabelButton:  # Button "CANCEL"
                text: "CANCEL" if self.state == 'normal' else "[u]CANCEL[/u]"
                markup: True
                on_release:
                    root.reset_data()  # call method reset_data in class LoginScreenAthlete in main.py
                    app.change_screen('home_screen',CardTransition(direction='up',duration=.3))  # change to HomeScreen (Screen)

        LabelButton:  #Button "FORGOT PASSWORD?"
            text: "FORGOT PASSWORD?" if self.state == 'normal' else "[u]FORGOT PASSWORD?[/u]"
            markup: True
            pos_hint: {"top": .05, "right": .75}
            size_hint: .5, .02
            on_release:
                root.reset_data()  # call method reset_data in class LoginScreenAthlete in main.py
                app.change_screen("forgot_password_athlete", CardTransition(direction='up',duration=.3))  # change to ForgotPasswordAthlete (Screen)