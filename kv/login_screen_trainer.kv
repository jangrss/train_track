
# Screen to log into the application with a trainer account  (main.py: LoginScreenTrainer)
<LoginScreenTrainer>:
    FloatLayout:
        # Background color
        canvas:
            Rectangle:
                size: self.size
                pos: self.pos
                source: "graphics/background/background_trainer.png"

        Image: # TrainTrack Logo
            pos_hint: {"top": 1, "right": .9}
            size_hint: .75, .37
            source: "graphics/logo/LogoText_reduced.png"

        # Screen name
        Label:
            text: "LOGIN SCREEN TRAINER"
            pos_hint: {"top": .66, "right": 1}
            size_hint: 1, .05
            font_size: '20sp'
            canvas.before:
                Color:
                    rgba: [0,100,100,.25]
                Rectangle:
                    pos: self.pos
                    size: self.size

        TextInput: # input field email address
            id: login_email
            hint_text: "Enter Trainer Email"
            pos_hint: {"top": .58, "right": .89}
            size_hint: .78, .08
            use_bubble: True
            use_handles: True
            font_size: '15sp'
            multiline: False
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: 1, 1, 1, 1
                Line:
                    points: self.x + dp(value=5), self.y + dp(value=10), self.x + self.width - dp(value=5), self.y + dp(value=10)
                    width: 1

        TextInput: # input field password
            id: login_password
            password: True
            hint_text: "Password"
            pos_hint: {"top": .47, "right": .89}
            size_hint: .78, .08
            use_bubble: True
            use_handles: True
            font_size: '15sp'
            multiline: False
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: 1, 1, 1, 1
                Line:
                    points: self.x + dp(value=5), self.y + dp(value=10), self.x + self.width - dp(value=5), self.y + dp(value=10)
                    width: 1


        # Buttons "GET STARTED" and "Cancel"
        GridLayout:
            cols: 1
            pos_hint: {"top": .275, "right": .89}
            size_hint: .78, .18
            ImageButton:
                id: getstarted_trainer
                source: "graphics/buttons/get_started_trainer.png" if self.state == 'normal' else "graphics/buttons/get_started_trainer_grau.png"
                on_release:
                    root.get_started()
            LabelButton:
                text: "CANCEL" if self.state == 'normal' else "[u]CANCEL[/u]"
                markup: True
                on_release:
                    root.reset_data()
                    app.change_screen('home_screen',CardTransition(direction='up',duration=.3))

        # Button "Forgot Password"
        GridLayout:
            cols:1
            pos_hint: {"top": .1, "right": .89}
            size_hint: .78, .10
            LabelButton:
                text: "FORGOT PASSWORD?" if self.state == 'normal' else "[u]FORGOT PASSWORD?[/u]"
                markup: True
                on_release:
                    root.reset_data()
                    app.change_screen("forgot_password_trainer",CardTransition(direction='up',duration=.3))
            LabelButton:
                text: "NO ACCOUNT? CLICK HERE TO REGISTER" if self.state == 'normal' else "[u]NO ACCOUNT? CLICK HERE TO REGISTER[/u]"
                markup: True
                on_release:
                    root.reset_data()
                    app.change_screen("registration_screen_trainer",CardTransition(direction='up',duration=.3))
